


/*
    Generated by HDL Build
*/
module spi_framed_readout(
    input wire  resn,
    input wire  spi_clk,
    input wire  spi_mosi,
    input wire  spi_csn,
    output wire  spi_miso
);

    // Connections
    //----------------
    wire [7:0] protocol_rfg_address; // size=8
    wire [7:0] protocol_rfg_write_value; // size=8
    wire protocol_rfg_write; // size=1
    wire protocol_rfg_read; // size=1
    wire protocol_rfg_read_valid; // size=1
    wire [7:0] protocol_rfg_read_value; // size=8
    wire [7:0] igress_m_axis_tdata; // size=8
    wire igress_m_axis_tvalid; // size=1
    wire igress_m_axis_tready; // size=1
    wire [7:0] igress_m_axis_tdest; // size=8
    wire [7:0] protocol_m_axis_tdata; // size=8
    wire protocol_m_axis_tvalid; // size=1
    wire protocol_m_axis_tready; // size=1
    wire protocol_m_axis_tlast; // size=1
    wire [7:0] protocol_m_axis_tid; // size=8
    wire [7:0] readout_framing_m_axis_tdata; // size=8
    wire readout_framing_m_axis_tvalid; // size=1
    wire readout_framing_m_axis_tready; // size=1
    wire [7:0] readout_framing_m_axis_tuser; // size=8 

    // Sections
    //---------------


    // Instances
    //------------
        
    // Module Instance
    spi_slave_axis_igress #(.AXIS_DEST_SIZE(8),.AXIS_DEST(0),.ASYNC_RES(1),.MSB_FIRST(1)) igress(
        .resn(resn),
        .spi_clk(spi_clk),
        .spi_csn(spi_csn),
        .spi_mosi(spi_mosi),
        .m_axis_tdata(igress_m_axis_tdata),
        .m_axis_tvalid(igress_m_axis_tvalid),
        .m_axis_tready(igress_m_axis_tready),
        .m_axis_tdest(igress_m_axis_tdest),
        .err_overrun(/*No Connection*/)
    );
            
    
    // Module Instance
    rfg_axis_protocol #(.DATA_WIDTH(8),.ID_WIDTH(8),.USER_WIDTH(1),.AXIS_MASTER_DEST(0)) protocol(
        .aclk(spi_clk),
        .aresetn(resn),
        .m_axis_tdata(protocol_m_axis_tdata),
        .m_axis_tvalid(protocol_m_axis_tvalid),
        .m_axis_tready(protocol_m_axis_tready),
        .m_axis_tlast(protocol_m_axis_tlast),
        .m_axis_tid(protocol_m_axis_tid),
        .m_axis_tdest(/*No Connection*/),
        .m_axis_tuser(/*No Connection*/),
        .s_axis_tdata(igress_m_axis_tdata),
        .s_axis_tvalid(igress_m_axis_tvalid),
        .s_axis_tready(igress_m_axis_tready),
        .s_axis_tlast(/*No Connection*/),
        .s_axis_tid(/*No Connection*/),
        .s_axis_tdest(igress_m_axis_tdest),
        .s_axis_tuser(/*No Connection*/),
        .rfg_address(protocol_rfg_address),
        .rfg_write_value(protocol_rfg_write_value),
        .rfg_write(protocol_rfg_write),
        .rfg_read(protocol_rfg_read),
        .rfg_read_valid(protocol_rfg_read_valid),
        .rfg_read_value(protocol_rfg_read_value)
    );
            
    
    // Module Instance
    main_rfg  main_rfg_I(
        .clk(spi_clk),
        .resn(resn),
        .rfg_address(protocol_rfg_address),
        .rfg_write_value(protocol_rfg_write_value),
        .rfg_write(protocol_rfg_write),
        .rfg_read(protocol_rfg_read),
        .rfg_read_valid(protocol_rfg_read_valid),
        .rfg_read_value(protocol_rfg_read_value),
        .scratchpad0(/*No Connection*/),
        .scratchpad1(/*No Connection*/)
    );
            
    
    // Module Instance
    rfg_axis_readout_framing #(.MTU_SIZE(16),.IDLE_BYTE(8'hBC),.START_BYTE(8'hEF)) readout_framing(
        .clk(spi_clk),
        .resn(resn),
        .s_axis_tdata(protocol_m_axis_tdata),
        .s_axis_tvalid(protocol_m_axis_tvalid),
        .s_axis_tlast(protocol_m_axis_tlast),
        .s_axis_tready(protocol_m_axis_tready),
        .s_axis_tid(protocol_m_axis_tid),
        .m_axis_tdata(readout_framing_m_axis_tdata),
        .m_axis_tvalid(readout_framing_m_axis_tvalid),
        .m_axis_tready(readout_framing_m_axis_tready),
        .m_axis_tuser(readout_framing_m_axis_tuser)
    );
            
    
    // Module Instance
    spi_slave_axis_egress #(.ASYNC_RES(1),.MSB_FIRST(1),.MISO_SIZE(1),.MTU_SIZE(16)) egress(
        .resn(resn),
        .spi_csn(spi_csn),
        .spi_clk(spi_clk),
        .spi_miso(spi_miso),
        .s_axis_tdata(readout_framing_m_axis_tdata),
        .s_axis_tvalid(readout_framing_m_axis_tvalid),
        .s_axis_tready(readout_framing_m_axis_tready),
        .s_axis_tuser(readout_framing_m_axis_tuser)
    );
                

endmodule

        
